name: Deploy microservice

on:
  push: 
    branches:
      - main

  workflow_dispatch: 

jobs:

  deploy:
    runs-on: ubuntu-latest
    
    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW  }}
      REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}

    steps:
      
      # Step1: Checks-out your repository under 
      - uses: actions/checkout@v3

      #Step 2: Login to Azure
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # # Step3: Set up Terraform
      # - uses: hashicorp/setup-terraform@v3
      #   with:
      #     terraform_version: 1.9.0

      # # Step4: Terraform 
      # - name: Terraform init
      #   run: terraform init
      #   working-directory: ./terraform

      # - name: Terraform Plan
      #   run: terraform plan
      #   working-directory: ./terraform

      # - name: Terraform Apply
      #   run: terraform apply -auto-approve
      #   working-directory: ./terraform


      # Step 3: Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        run: |
          az acr login --name ${{ env.REGISTRY_NAME }}


      # Step5: Builds the Docker image.
      - name: Build Docker images
        run: |
          chmod +x ./scripts/build-image.sh
          ./scripts/build-image.sh

      # Step 6: Publish the Docker images to the container registry
      - name: Push Docker images to Container Registry
        run: |
          # Push the book_catalog image
          docker push "${{ env.CONTAINER_REGISTRY }}/book_catalog:${{ env.VERSION }}"

          # Push the inventory_management image
          docker push "${{ env.CONTAINER_REGISTRY }}/inventory_management:${{ env.VERSION }}"

      # Step7: Installs Kubectl and connects it to the cluster.
      - uses: azure/aks-set-context@v3
        with:
          resource-group: 'projectpart5'
          cluster-name: '${{ secrets.AKS_CLUSTER_NAME }}'
      

      - name: substitute environment variables
        run: envsubst < scripts/kubernetes/deployment.yaml > scripts/kubernetes/deployment-withenv.yaml

      #
      # Step8: Expands the configuration template and deploys the microservice.
      #
      #step 7: Deploy to AKS
      - uses: Azure/k8s-deploy@v5
        with:
          manifests: |
            scripts/kubernetes/deployment-withenv.yaml
          images: | 
            '${{ env.CONTAINER_REGISTRY }}/book_catalog:${{ env.VERSION }}'
            '${{ env.CONTAINER_REGISTRY }}/inventory_management:${{ env.VERSION }}'
